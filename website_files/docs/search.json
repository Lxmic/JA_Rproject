{
  "articles": [
    {
      "path": "about.html",
      "title": "About this site",
      "description": "Some additional details about the website",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-09-12T22:59:39+08:00"
    },
    {
      "path": "Figure1.html",
      "title": "Figure 1",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Jianfeng Jin",
          "url": "https://othlis.com"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
      "last_modified": "2022-09-12T22:59:39+08:00"
    },
    {
      "path": "Figure2.html",
      "title": "Figure 2",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Nora Jones",
          "url": "https://example.com/norajones"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nDistill is a publication format for scientific and technical writing, native to the web.\nLearn more about using Distill for R Markdown at https://rstudio.github.io/distill.\n\n\n\n",
      "last_modified": "2022-09-12T22:59:43+08:00"
    },
    {
      "path": "index.html",
      "title": "JA_project",
      "description": "Welcome to the website. I hope you enjoy it!\n",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-09-12T22:59:44+08:00"
    },
    {
      "path": "mfuzz.html",
      "title": "mfuzz",
      "description": "JA-response gene clusters\n",
      "author": [
        {
          "name": "Jianfeng Jin",
          "url": "https://othlis.com"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\n载入R包\n\n\nlibrary(Mfuzz)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(rmarkdown)\nlibrary(distill)\nlibrary(tidyverse)\nlibrary(openxlsx)\nlibrary(RColorBrewer)\n\n\n读取转录组数据\nopenxlsx中提供的函数直接读取xlsx表，并且指定sheet以及要读取的列数和行数。\n\n\nAll_SL <- read.xlsx(xlsxFile = \"../data/SL_All_expression.xlsx\",\n    sheet = 1, cols = 6:35, colNames = TRUE)\nAll_SP <- read.xlsx(xlsxFile = \"../data/SP_All_Expression.xlsx\",\n    sheet = 1, cols = 6:35, colNames = TRUE)\n\n\n三个重复求平均值\nSP重复样品的均值计算\n\n\nPL_3h <- apply(All_SP[16:18], 1, mean)\nPL_6h <- apply(All_SP[19:21], 1, mean)\nPL_12h <- apply(All_SP[22:24], 1, mean)\nPL_24h <- apply(All_SP[25:27], 1, mean)\nPL_72h <- apply(All_SP[28:30], 1, mean)\nPJA_3h <- apply(All_SP[1:3], 1, mean)\nPJA_6h <- apply(All_SP[4:6], 1, mean)\nPJA_12h <- apply(All_SP[7:9], 1, mean)\nPJA_24h <- apply(All_SP[10:12], 1, mean)\nPJA_72h <- apply(All_SP[13:15], 1, mean)\n\n\nSL重复样品的均值计算\n\n\nL_3h <- apply(All_SL[16:18], 1, mean)\nL_6h <- apply(All_SL[19:21], 1, mean)\nL_12h <- apply(All_SL[22:24], 1, mean)\nL_24h <- apply(All_SL[25:27], 1, mean)\nL_72h <- apply(All_SL[28:30], 1, mean)\nJA_3h <- apply(All_SL[1:3], 1, mean)\nJA_6h <- apply(All_SL[4:6], 1, mean)\nJA_12h <- apply(All_SL[7:9], 1, mean)\nJA_24h <- apply(All_SL[10:12], 1, mean)\nJA_72h <- apply(All_SL[13:15], 1, mean)\n\n\n构建新的SP和SL数据集\n\n\nSP <- tibble(PL_3h, PJA_3h, PL_6h, PJA_6h, PL_12h, PJA_12h, PL_24h,\n    PJA_24h, PL_72h, PJA_72h)\n\nSL <- tibble(L_3h, JA_3h, L_6h, JA_6h, L_12h, JA_12h, L_24h,\n    JA_24h, L_72h, JA_72h)\n\n\n重命名colnames\n\n\nnewSP <- SP %>%\n    rename(CK_3h = PL_3h, JA_3h = PJA_3h, CK_6h = PL_6h, JA_6h = PJA_6h,\n        CK_12h = PL_12h, JA_12h = PJA_12h, CK_24h = PL_24h, JA_24h = PJA_24h,\n        CK_72h = PL_72h, JA_72 = PJA_72h)\n\nnewSL <- SL %>%\n    rename(CK_3h = L_3h, CK_6h = L_6h, CK_12h = L_12h, CK_24h = L_24h,\n        CK_72h = L_72h)\n\n\n构建ExpressionSet对象\n\n\nSPM <- as.matrix(newSP)\nSLM <- as.matrix(newSL)\neSPM <- new(\"ExpressionSet\", exprs = SPM)\neSLM <- new(\"ExpressionSet\", exprs = SLM)\n\n\n处理缺失值或者异常值\n\n\neSPM <- filter.NA(eSPM, thres = 0.25)\n\n0 genes excluded.\n\neSLM <- filter.NA(eSLM, thres = 0.25)\n\n0 genes excluded.\n\neSPM.f <- fill.NA(eSPM, mode = \"mean\")\neSLM.f <- fill.NA(eSLM, mode = \"mean\")\neSPM.d <- filter.std(eSPM.f, min.std = 0)\n\n171 genes excluded.\n\neSLM.d <- filter.std(eSLM.f, min.std = 0)\n\n156 genes excluded.\n\n\n标准化数据\n\n\neSPM.s <- standardise(eSPM.d)\neSLM.s <- standardise(eSLM.d)\nSP.s <- eSPM.s@assayData$exprs\nSL.s <- eSLM.s@assayData$exprs\nhead(SP.s)\n\n       CK_3h       JA_3h      CK_6h      JA_6h     CK_12h      JA_12h\n1 -0.5080864  0.45991931 -0.5080864 -0.5080864 -0.5080864  0.50271350\n2 -0.3162278 -0.31622777 -0.3162278 -0.3162278  2.8460499 -0.31622777\n3 -1.6158102 -0.69347715 -0.5432449 -0.6452622  1.3776899  0.86804921\n4 -1.0979672 -1.02265695 -0.8760610 -0.1888631  1.9060053  0.01313715\n5 -0.8755456 -0.50825268 -0.1743159 -0.4081027  2.3081751  0.30589454\n6 -0.7834191 -0.05514852 -0.7834191 -0.4268133  1.7762084 -0.40511679\n       CK_24h     JA_24h     CK_72h       JA_72\n1 -0.50808640 -0.5080864 -0.5080864  2.59397202\n2 -0.31622777 -0.3162278 -0.3162278 -0.31622777\n3  0.65693690  1.3107699 -0.6218970 -0.09375461\n4  0.01701771  0.9587956 -0.6764881  0.96708073\n5 -0.74946940  0.8961676 -0.9788445  0.18429362\n6 -0.41762752 -0.4204292 -0.4186201  1.93438519\n\nhead(SL.s)\n\n       CK_3h      JA_3h       CK_6h      JA_6h     CK_12h     JA_12h\n1 -0.9732677 -0.9732677  1.10172459 -0.9732677  0.5767281 -0.9732677\n2  0.1245987 -0.1517158 -0.55555143 -0.8488993 -0.3115965 -0.4393387\n3  0.2934248  1.2386088 -0.28367138  1.4567763 -0.5116097  1.0803005\n4 -0.8209884 -0.8209884 -0.09881421 -0.8209884 -0.8209884 -0.8209884\n5 -0.6323496 -1.0344844 -0.26604395 -0.4185251  0.9727621  0.4629423\n6 -0.4742973 -0.4742973 -0.47429730 -0.4742973 -0.4742973 -0.4742973\n      CK_24h     JA_24h      CK_72h     JA_72h\n1  0.6475973  1.7652848  0.13466329 -0.3329271\n2 -0.6517951  2.6740061 -0.08430265  0.2445948\n3 -1.3898316 -1.2753418 -0.35397741 -0.2546786\n4  1.9850916  0.6509709  0.66778116  0.8999124\n5 -0.2928349 -1.2064861  2.12017919  0.2948404\n6 -0.4742973  1.8681826 -0.47429730  1.9261958\n\n计算最佳m值\n\n\nSPm <- mestimate(eSPM.s)\nSLm <- mestimate(eSLM.s)\n\n\n聚类\n\n\nset.seed(579)\nSPcl <- mfuzz(eSPM.s, c = 8, m = SPm)\nset.seed(560)\nSLcl <- mfuzz(eSLM.s, c = 8, m = SLm)\n\n\n绘制折线图\nSP折线图\n\n\nmfuzz.plot2(eSPM.s, SPcl, mfrow = c(2, 4), x11 = FALSE, centre = T,\n    time.labels = colnames(eSPM.s), colo = mycolor)\n\n\n\nSL折线图\n\n\nmfuzz.plot2(eSLM.s, SLcl, mfrow = c(2, 4), x11 = FALSE, centre = T,\n    time.labels = colnames(eSLM.s), colo = mycolor)\n\n\n\n\n\n\n",
      "last_modified": "2022-09-12T23:00:26+08:00"
    }
  ],
  "collections": []
}
